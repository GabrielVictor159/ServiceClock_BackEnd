version: '3.4'

services:
  serviceclock_backend_api:
    image: serviceclockbackendapi
    build:
      context: .
      dockerfile: ServiceClock_BackEnd_Api/Dockerfile
    restart: always
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - DBCONN=${DBCONN}
      - JWT_SECRET=${JWT_SECRET}
      - TOKEN_EXPIRES=${TOKEN_EXPIRES}
      - BLOB_CONTAINER=${SERVICE_CLOCK_BLOB_CONTAINER}
      - PRIVATE_BLOB_CONTAINER=${SERVICE_CLOCK_PRIVATE_BLOB_CONTAINER}
      - STORAGE_CONECTION_STRING=${SERVICE_CLOCK_STORAGE_CONECTION_STRING}
      - ASPNETCORE_HTTP_PORTS=8080
      - PREFIX_PATH="serviceclock/"
    networks:
      - traefik-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.serviceclock.rule=Host(`${BASE_PATH}`) && PathPrefix(`/serviceclock`)"
      - "traefik.http.routers.serviceclock.entrypoints=${HTTP_SCHEME}"
      - "traefik.http.routers.serviceclock.tls.certresolver=${TLS_POLITIC}"
      - "traefik.http.services.serviceclock.loadbalancer.server.port=8080"
      - "traefik.http.routers.serviceclock.middlewares=strip-serviceclock"
      - "traefik.http.middlewares.strip-serviceclock.stripprefix.prefixes=/serviceclock"

networks:
  traefik-network:
    external: true